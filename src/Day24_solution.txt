# ----------------------------------------------------------------------------------------------------------------------w = in[0]

x = 1
y = in[0] + 13
z = in[0] + 13

# ----------------------------------------------------------------------------------------------------------------------

w = in[1]
x = 1
y = in[1] + 10
z = 26 * (in[0] + 13) + in[1] + 10

# ----------------------------------------------------------------------------------------------------------------------

w = in[2]
x = 1
y = in[2] + 3
z = 26 * (26 * (in[0] + 13) + in[1] + 10) + in[2] + 3

# ----------------------------------------------------------------------------------------------------------------------

w = in[3]
z = 26 * (in[0] + 13) + in[1] + 10
x = if (in[3] == in[2] - 8) 0 else 1

# ASSUME: in[3] = in[2] - 8 to "pop" a number off the stack and reduce z.
x = 0
y = 0
z = 26 * (in[0] + 13) + in[1] + 10

# ----------------------------------------------------------------------------------------------------------------------

w = in[4]
x = 1
y = in[4] + 9
z = 26 * (26 * (in[0] + 13) + in[1] + 10) + in[4] + 9

# ----------------------------------------------------------------------------------------------------------------------

w = in[5]
z = 26 * (in[0] + 13) + in[1] + 10
x = if (in[5] == in[4] + 5) 0 else 1

# ASSUME: in[5] = in[4] + 5 to "pop" a number off the stack and reduce z.
x = 0
y = 0
z = 26 * (in[0] + 13) + in[1] + 10

# ----------------------------------------------------------------------------------------------------------------------

w = in[6]
x = 1
y = in[6] + 5
z = 26 * (26 * (in[0] + 13) + in[1] + 10) + in[6] + 5

# ----------------------------------------------------------------------------------------------------------------------

w = in[7]
x = 1
y = in[7] + 1
z = 26 * (26 * (26 * (in[0] + 13) + in[1] + 10) + in[6] + 5) + in[7] + 1

# ----------------------------------------------------------------------------------------------------------------------

w = in[8]
x = 1
y = in[8]
z = 26 * (26 * (26 * (26 * (in[0] + 13) + in[1] + 10) + in[6] + 5) + in[7] + 1) + in[8]

# ----------------------------------------------------------------------------------------------------------------------

w = in[9]
z = 26 * (26 * (26 * (in[0] + 13) + in[1] + 10) + in[6] + 5) + in[7] + 1
x = if (in[9] == in[8] - 2) 0 else 1

# ASSUME: in[9] = in[8] - 2 to "pop" a number off the stack and reduce z.
x = 0
y = 0
z = 26 * (26 * (26 * (in[0] + 13) + in[1] + 10) + in[6] + 5) + in[7] + 1

# ----------------------------------------------------------------------------------------------------------------------

w = in[10]
z = 26 * (26 * (in[0] + 13) + in[1] + 10) + in[6] + 5
x = if (in[10] == in[7] - 4) 0 else 1

# ASSUME: in[10] = in[7] - 4 to "pop" a number off the stack and reduce z.
x = 0
y = 0
z = 26 * (26 * (in[0] + 13) + in[1] + 10) + in[6] + 5

# ----------------------------------------------------------------------------------------------------------------------

w = in[11]
z = 26 * (in[0] + 13) + in[1] + 10
x = if (in[11] == in[6] - 6) 0 else 1

# ASSUME: in[11] = in[6] - 6 to "pop" a number off the stack and reduce z.
x = 0
y = 0
z = 26 * (in[0] + 13) + in[1] + 10

# ----------------------------------------------------------------------------------------------------------------------

w = in[12]
z = in[0] + 13
x = if (in[12] == in[1] - 3) 0 else 1

# ASSUME: in[12] = in[1] - 3 to "pop" a number off the stack and reduce z.
x = 0
y = 0
z = in[0] + 13

# ----------------------------------------------------------------------------------------------------------------------

w = in[13]
z = 0
x = if (in[13] == in[0] + 3) 0 else 1

# ASSUME: in[13] = in[0] + 3 to "pop" a number off the stack and reduce z.
x = 0
y = 0
z = 0

# ----------------------------------------------------------------------------------------------------------------------

Valid model numbers satisfy:

in[ 3] = in[2] - 8
in[ 5] = in[4] + 5
in[ 9] = in[8] - 2
in[10] = in[7] - 4
in[11] = in[6] - 6
in[12] = in[1] - 3
in[13] = in[0] + 3

We must have:

(in[0], in[13]) in {(1, 4), (2, 5), (3, 6), (4, 7), (5, 8), (6, 9)}
(in[1], in[12]) in {(4, 1), (5, 2), (6, 3), (7, 4), (8, 5), (9, 6)}
in[2] = 9
in[3] = 1
(in[4], in[5]) in {(1, 6), (2, 7), (3, 8), (4, 9)}
(in[6], in[11]) in {(7, 1), (8, 2), (9, 3)}
(in[7], in[10]) in {(5, 1), (6, 2), (7, 3), (8, 4), (9, 5)}
(in[8], in[9]) in {(3, 1), (4, 2), (5, 3), (6, 4), (7, 5), (8, 6), (9, 7)}

Largest possible input:

69914999975369

Smallest possible input:

14911675311114
